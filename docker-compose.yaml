#들여쓰기 기준

services:
#  nginx:
#    image: nginx:latest
#    container_name: nginx-prod
#    volumes:
#      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./cert/cert.pem:/etc/nginx/cert/cert.pem
#      - ./cert/key.pem:/etc/nginx/cert/key.pem
#    ports:
#      - 80:80
#      - 443:443
#    command: /bin/sh -c "nginx -g 'daemon off;'"
#    depends_on:
#      - react_app
#      - nestjs_api
#    networks:
#      - koreanmarket-network
#
#  nestjs_api:
#    build:
#      dockerfile: Dockerfile
#      context: Backend
#      target: development
#    volumes:
#      - ./Backend:/usr/src/app
#    env_file:
#      - ./Backend/.env
#    command: npm run start:dev
#    ports:
#      - 8000:8000
#    networks:
#      - koreanmarket-network


#  react_app:
#    container_name: react_app
#    build:
#      dockerfile: Dockerfile
#      context: Front
#      target: development
#    command: npm run start
#    ports:
#      - 3000:3000
#    environment:
#      - CHOKIDAR_USEPOLLING=true
#    networks:
#      - koreanmarket-network

# compose 파일 버전
  # 서비스 명
  postgresql:
    # 사용할 이미지
    image: postgres
    # 컨테이너 실행 시 재시작
    restart: always
    # 컨테이너명 설정
    container_name: postgres
    # 접근 포트 설정 (컨테이너 외부:컨테이너 내부)
    ports:
      - "5432:5432"
    # 환경 변수 설정
    environment:
      # PostgreSQL 계정 및 패스워드 설정 옵션
      POSTGRES_USER: root
      POSTGRES_PASSWORD: didgksehd
    # 볼륨 설정
    volumes:
      - ./data/postgres/:/var/lib/postgresql/data

networks:
  koreanmarket-network:
